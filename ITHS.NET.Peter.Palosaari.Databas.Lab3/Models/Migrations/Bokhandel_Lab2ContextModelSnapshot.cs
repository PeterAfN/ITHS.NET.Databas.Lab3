// <auto-generated />
using System;
using ITHS.NET.Peter.Palosaari.Databas.Lab3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITHS.NET.Peter.Palosaari.Databas.Lab3.Migrations
{
    [DbContext(typeof(Bokhandel_Lab2Context))]
    partial class Bokhandel_Lab2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Butiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Adress")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Land")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValueSql("('Sverige')");

                    b.Property<string>("Namn")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("Postnummer")
                        .HasColumnType("int");

                    b.Property<string>("Stad")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Butiker");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Böcker", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("ISBN13");

                    b.Property<int>("FörlagId")
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    b.Property<decimal?>("Pris")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Språk")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Titel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Utgivningsdatum")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.HasKey("Isbn13");

                    b.HasIndex("FörlagId");

                    b.ToTable("Böcker");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Författare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Efternamn")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("Födelsedatum")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Förnamn")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Författare");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.FörfattareBöckerJunction", b =>
                {
                    b.Property<int>("FörfattareId")
                        .HasColumnType("int")
                        .HasColumnName("FörfattareID");

                    b.Property<string>("BokId")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("BokID");

                    b.HasKey("FörfattareId", "BokId");

                    b.HasIndex("BokId");

                    b.ToTable("FörfattareBöcker_Junction");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Förlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Beskrivning")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Epost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Namn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefonnummer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Förlag");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Kunder", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("ID");

                    b.Property<string>("Användarnamn")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Efternamn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Epost")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Förnamn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Lösenord")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefonnummer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Kunder");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.LagerSaldo", b =>
                {
                    b.Property<int>("ButikId")
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("ISBN");

                    b.Property<int?>("Antal")
                        .HasColumnType("int");

                    b.HasKey("ButikId", "Isbn");

                    b.HasIndex("Isbn");

                    b.ToTable("LagerSaldo");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.OrderDetaljer", b =>
                {
                    b.Property<string>("ProduktId")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("ProduktAntal")
                        .HasColumnType("int");

                    b.Property<double?>("ProduktPris")
                        .HasColumnType("float");

                    b.Property<double?>("ProduktRabattProcent")
                        .HasColumnType("float");

                    b.HasKey("ProduktId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetaljer");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Ordrar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Adress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ButikId")
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    b.Property<DateTime?>("Datum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Fraktavgift")
                        .HasColumnType("float");

                    b.Property<string>("FörsäljarId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KundId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("KundID");

                    b.Property<string>("Land")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postnummer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Stad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ButikId");

                    b.HasIndex("KundId");

                    b.ToTable("Ordrar");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Böcker", b =>
                {
                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Förlag", "Förlag")
                        .WithMany("Böcker")
                        .HasForeignKey("FörlagId")
                        .HasConstraintName("FK_Böcker_Förlag")
                        .IsRequired();

                    b.Navigation("Förlag");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.FörfattareBöckerJunction", b =>
                {
                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Böcker", "Böcker")
                        .WithMany("FörfattareBöckerJunctions")
                        .HasForeignKey("BokId")
                        .HasConstraintName("FK_FörfattareBöcker_Junction_Böcker")
                        .IsRequired();

                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Författare", "Författare")
                        .WithMany("FörfattareBöckerJunctions")
                        .HasForeignKey("FörfattareId")
                        .HasConstraintName("FK_FörfattareBöcker_Junction_Författare")
                        .IsRequired();

                    b.Navigation("Böcker");

                    b.Navigation("Författare");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.LagerSaldo", b =>
                {
                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Butiker", "Butiker")
                        .WithMany("LagerSaldon")
                        .HasForeignKey("ButikId")
                        .HasConstraintName("FK_LagerSaldo_Butiker")
                        .IsRequired();

                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Böcker", "IsbnNavigation")
                        .WithMany("LagerSaldon")
                        .HasForeignKey("Isbn")
                        .HasConstraintName("FK_LagerSaldo_Böcker")
                        .IsRequired();

                    b.Navigation("Butiker");

                    b.Navigation("IsbnNavigation");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.OrderDetaljer", b =>
                {
                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Ordrar", "Ordrar")
                        .WithMany("OrderDetaljer")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderDetaljer_Ordrar")
                        .IsRequired();

                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Böcker", "ISBN")
                        .WithMany("OrderDetaljer")
                        .HasForeignKey("ProduktId")
                        .HasConstraintName("FK_OrderDetaljer_Böcker")
                        .IsRequired();

                    b.Navigation("ISBN");

                    b.Navigation("Ordrar");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Ordrar", b =>
                {
                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Butiker", "Butiker")
                        .WithMany("Ordrar")
                        .HasForeignKey("ButikId")
                        .HasConstraintName("FK_Ordrar_Butiker")
                        .IsRequired();

                    b.HasOne("ITHS.NET.Peter.Palosaari.Databas.Lab3.Kunder", "Kunder")
                        .WithMany("Ordrar")
                        .HasForeignKey("KundId")
                        .HasConstraintName("FK_Ordrar_Kunder")
                        .IsRequired();

                    b.Navigation("Butiker");

                    b.Navigation("Kunder");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Butiker", b =>
                {
                    b.Navigation("LagerSaldon");

                    b.Navigation("Ordrar");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Böcker", b =>
                {
                    b.Navigation("FörfattareBöckerJunctions");

                    b.Navigation("LagerSaldon");

                    b.Navigation("OrderDetaljer");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Författare", b =>
                {
                    b.Navigation("FörfattareBöckerJunctions");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Förlag", b =>
                {
                    b.Navigation("Böcker");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Kunder", b =>
                {
                    b.Navigation("Ordrar");
                });

            modelBuilder.Entity("ITHS.NET.Peter.Palosaari.Databas.Lab3.Ordrar", b =>
                {
                    b.Navigation("OrderDetaljer");
                });
#pragma warning restore 612, 618
        }
    }
}
